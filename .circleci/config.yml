version: 2.1

setup: true

orbs:
  path-filtering: circleci/path-filtering@2.1.0

jobs:
  setup-job:
    docker:
      - image: cimg/base:current
    resource_class: small
    parameters:
      file-list:
        type: string
        default: "/tmp/files-changed-list"
      project-slug:
        type: string
        default: "gh/AwesomeCICD/path-filtering-github-app-demo"
      pipeline-definition-id:
        type: string
        default: "086fef1d-82ab-45bc-9141-392411080b83"
    steps:
      - checkout
      - path-filtering/set-parameters:
          base-revision: <<pipeline.git.branch>>
          output-path: /tmp/pipeline-parameters.json
          mapping: |
            frontend/.* frontend true
            backend/.* backend true
            infra/.* infra true
            infra/.* backend true
            run-all/.* run-all-jobs true
      - run: 
          name: Ensure parameters.json was created
          command: test -f /tmp/pipeline-parameters.json && cat /tmp/pipeline-parameters.json || exit 1
      - run: 
          name: Ensure changed files were logged properly
          command: test -f /tmp/files-changed-list && cat /tmp/files-changed-list || exit 1
      - run:
          name: Trigger a pipeline for each changed file
          command: |
            while IFS= read -r value; do
              [[ -z "$value" || "$value" == "#"* || "$value" == ".circleci/config.yml" ]] && continue
              echo "Triggering pipeline for: $value"
              curl -s -X POST "https://circleci.com/api/v2/project/<<parameters.project-slug>>/pipeline/run" \
                -H "Circle-Token: $CIRCLE_TOKEN" -H "Content-Type: application/json" \
                -d "{\"definition_id\":\"<<parameters.pipeline-definition-id>>\",\"config\":{\"branch\":\"<<pipeline.git.branch>>\"},\"checkout\":{\"branch\":\"<<pipeline.git.branch>>\"},\"parameters\":{\"changed-module\":\"$value\"}}"
            done < "<<parameters.file-list>>"

workflows:
  setup-workflow:
    jobs:
      - setup-job:
           context: vijay-context

    
